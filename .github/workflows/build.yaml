name: Build and Deploy

on:
    push:
      tags:
        - '*'
    workflow_dispatch:
      inputs:
        tag:
          description: 'Tag to build and deploy'
          required: true
          default: 'latest'
          type: string

jobs:
  ghcr-build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    env:
      REGISTRY: ghcr.io

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and run test cases
        run: | 
            mvn clean install -DskipTests
            cd service
            mvn clean install

      - name: Package build artifact (Play dist)
        run: mvn -f service/pom.xml play2:dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: lms-service-dist
          path: |
            service/target/lms-service-*-dist.zip

      - name: Extract image tag details
        id: image_vars
        run: |
          REPO_LOWER=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          SHORT_SHA=$(git rev-parse HEAD | cut -c1-7)
          
          # Determine tag based on trigger type
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TAG_LOWER=$(echo "${{ github.event.inputs.tag }}" | tr '[:upper:]' '[:lower:]')
          else
            TAG_LOWER=$(echo "${GITHUB_REF_NAME}" | tr '[:upper:]' '[:lower:]')
          fi
          
          IMAGE_NAME=${{ env.REGISTRY }}/${REPO_LOWER}
          IMAGE_TAG=${TAG_LOWER}_${SHORT_SHA}_${GITHUB_RUN_NUMBER}
          LATEST_TAG=${TAG_LOWER}
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV
          echo "SHORT_SHA=${SHORT_SHA}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ steps.image_vars.outputs.IMAGE_TAG }}
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ steps.image_vars.outputs.LATEST_TAG }}
          labels: |
            org.opencontainers.image.title=LMS Service
            org.opencontainers.image.description=Learning Management System Service
            org.opencontainers.image.version=${{ github.ref_name }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            org.opencontainers.image.authors=Mahesh Kumar Gangula <mahesh@sanketika.in>
